/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package metamerismoapp;

import java.awt.Color;
import java.awt.List;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author alberto
 */
public class variationsColorsGui extends javax.swing.JFrame {

    private PrintWriter writer = null;
    private int similarCount = 0;
    private int totalCount = 0;
    LinkedHashMap<String, ArrayList> colores;
    LinkedHashMap<String, String> coloresPromedio;
    
    Random r;
    
    /**
     * Creates new form variationsColorsGui
     */
    public variationsColorsGui() {
        initComponents();
        r = new Random();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        originalColor = new javax.swing.JPanel();
        variableColor = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        usernameTxt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        similarBtn = new javax.swing.JButton();
        differentBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MetamerismoApp");
        getContentPane().setLayout(new java.awt.BorderLayout(0, 40));

        jPanel1.setPreferredSize(new java.awt.Dimension(282, 194));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 80));

        originalColor.setBackground(new java.awt.Color(204, 255, 255));
        originalColor.setPreferredSize(new java.awt.Dimension(80, 80));

        javax.swing.GroupLayout originalColorLayout = new javax.swing.GroupLayout(originalColor);
        originalColor.setLayout(originalColorLayout);
        originalColorLayout.setHorizontalGroup(
            originalColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        originalColorLayout.setVerticalGroup(
            originalColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(originalColor);

        variableColor.setBackground(new java.awt.Color(204, 255, 255));
        variableColor.setPreferredSize(new java.awt.Dimension(80, 80));

        javax.swing.GroupLayout variableColorLayout = new javax.swing.GroupLayout(variableColor);
        variableColor.setLayout(variableColorLayout);
        variableColorLayout.setHorizontalGroup(
            variableColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        variableColorLayout.setVerticalGroup(
            variableColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(variableColor);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("¿Ves los colores iguales?");
        jPanel5.add(jLabel1);

        jPanel4.add(jPanel5, java.awt.BorderLayout.SOUTH);

        usernameTxt.setText("Introduce aqui tu nombre");
        usernameTxt.setPreferredSize(new java.awt.Dimension(274, 28));
        jPanel6.add(usernameTxt);

        jPanel4.add(jPanel6, java.awt.BorderLayout.NORTH);

        jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        similarBtn.setText("Si");
        similarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                similarBtnActionPerformed(evt);
            }
        });
        jPanel3.add(similarBtn);

        differentBtn.setText("No");
        differentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                differentBtnActionPerformed(evt);
            }
        });
        jPanel3.add(differentBtn);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void similarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_similarBtnActionPerformed
        similarCount++;
        saveAnswer("Si");
    }//GEN-LAST:event_similarBtnActionPerformed

    private void differentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_differentBtnActionPerformed
        saveAnswer("No");
    }//GEN-LAST:event_differentBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(variationsColorsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(variationsColorsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(variationsColorsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(variationsColorsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new variationsColorsGui().setVisible(true);
            }
        });
    }
    
    
    void setColors(LinkedHashMap<String, ArrayList>cs /*, LinkedHashMap<String, String> csPro*/)
    {
        colores = cs;
        // coloresPromedio = csPro;
        
        showNewColor();
    }
    
    void showNewColor()
    {
        if(colores.isEmpty())
            saveAndExit();
        
        totalCount++;
        String rKey = getRandomColor(colores);
        ArrayList<String> l = colores.get(rKey);
        System.out.println(rKey);
        System.out.println(l);
        int index = r.nextInt(l.size());
        
        String rColor = (String)colores.get(rKey).get(index);
        String[] rgbS = rColor.split(";");
        int red = Integer.parseInt(rgbS[0]);
        int green = Integer.parseInt(rgbS[1]);
        int blue = Integer.parseInt(rgbS[2]);
        
        Color cVariable = new Color(red,green,blue);
        
        rgbS = rKey.split(";");
        red = Integer.parseInt(rgbS[0]);
        green = Integer.parseInt(rgbS[1]);
        blue = Integer.parseInt(rgbS[2]);
        
        Color cOriginal = new Color(red,green,blue);
        
        originalColor.setBackground(cOriginal);
        variableColor.setBackground(cVariable);
        
        colores.get(rKey).remove(index);
        if(colores.get(rKey).isEmpty())
        {
            colores.remove(rKey);
        }
    }
    
    void saveAnswer(String answer)
    {
        try{
            if(writer == null)
                writer = new PrintWriter(usernameTxt.getText(), "UTF-8");

            int redV = variableColor.getBackground().getRed();
            int greenV = variableColor.getBackground().getGreen();
            int blueV = variableColor.getBackground().getBlue();
            
            int redO = originalColor.getBackground().getRed();
            int greenO = originalColor.getBackground().getGreen();
            int blueO = originalColor.getBackground().getBlue();

            writer.println(redO+";"+greenO+";"+blueO+";"+redV+";"+greenV+";"+blueV+";"+answer);
            writer.flush();
            showNewColor();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error al guardar respuesta! :S");
        }
    }
    
    void saveAndExit()
    {
        try {
            int negCount = totalCount-similarCount;
            if(writer != null)
            {
                writer.println(similarCount+";"+(totalCount-similarCount)+";"+totalCount);
                writer.flush();
                writer.close();
            }
            
            JOptionPane.showMessageDialog(null, "¡Prueba finalizada!\n "
                    + "\nRespuestas Afirmativas: "+similarCount+" ("+((1.0*similarCount)/totalCount)*100+" %)"
                    + "\nRespuestas Negativas: "+negCount+" ("+((1.0*negCount)/totalCount)*100+" %)"
                    + "\nRespuestas Totales: "+totalCount+"");
            System.exit(0);

            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error al guardar archivo! :S");
        }
    }
    
    String getRandomColor(LinkedHashMap<String,ArrayList> map)
    {
        int index = r.nextInt(map.size());
        int i=0;
        for (Map.Entry<String, ArrayList> entry : map.entrySet()) {
            String key = entry.getKey();
            
            if(index == i)
                return key;
            i++;
            
        }
        return "";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton differentBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel originalColor;
    private javax.swing.JButton similarBtn;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JPanel variableColor;
    // End of variables declaration//GEN-END:variables
}
